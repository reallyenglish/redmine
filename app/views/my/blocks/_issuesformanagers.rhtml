<%# TODO: shouldn't be hardcode for manager:3. Should add emergency one %>
<%
my_managing_projects = user.projects.select {|p| user.roles_for_project(p).map(&:id).include?(3)}.collect{|m| m.id}
if my_managing_projects.length > 0
%>
<h3><%=l(:re_extension_label_for_manager)%></h3>
<%
  manager_issues = Issue.find(:all,
                                :conditions => [
                                "(due_date < ? " +
                                "OR (assigned_to_id is null AND fixed_version_id is null)" +
                                "OR priority_id=7 " +
                                "OR (due_date is null AND (fixed_version_id is null OR #{Version.table_name}.effective_date is null OR #{Version.table_name}.effective_date < ?)))" +
                                "AND #{IssueStatus.table_name}.is_closed=? "+
                                "AND #{Project.table_name}.status=#{Project::STATUS_ACTIVE} " +
                                "AND #{Issue.table_name}.project_id in (#{my_managing_projects.join(',')})", 
                                Date.today, Date.today, false,  ],
                                :include => [ :status, :project, :tracker, :priority, :fixed_version ], 
                                :order => "priority_id desc, #{Issue.table_name}.due_date ")

%>
  <%= render :partial => 'issues/list_simple_for_manager', :locals => { :issues => manager_issues } %>
<%
else
   manager_issues = []
end
%>
